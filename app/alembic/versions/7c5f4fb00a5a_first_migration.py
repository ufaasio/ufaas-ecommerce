"""First migration

Revision ID: 7c5f4fb00a5a
Revises: 
Create Date: 2024-07-10 16:18:18.847070

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7c5f4fb00a5a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "application",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_application_created_at"), "application", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_application_name"), "application", ["name"], unique=False)
    op.create_index(op.f("ix_application_uid"), "application", ["uid"], unique=True)
    op.create_index(op.f("ix_application_url"), "application", ["url"], unique=False)
    op.create_table(
        "business",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_business_created_at"), "business", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_business_name"), "business", ["name"], unique=False)
    op.create_index(op.f("ix_business_uid"), "business", ["uid"], unique=True)
    op.create_index(op.f("ix_business_url"), "business", ["url"], unique=False)
    op.create_table(
        "permission",
        sa.Column("business_id", sa.Uuid(), nullable=False),
        sa.Column("app_id", sa.Uuid(), nullable=False),
        sa.Column("write_access", sa.Boolean(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_permission_app_id"), "permission", ["app_id"], unique=False
    )
    op.create_index(
        op.f("ix_permission_business_id"), "permission", ["business_id"], unique=False
    )
    op.create_index(
        op.f("ix_permission_created_at"), "permission", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_permission_uid"), "permission", ["uid"], unique=True)
    op.create_table(
        "proposal",
        sa.Column("issuer_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("sources", sa.JSON(), nullable=False),
        sa.Column("recipients", sa.JSON(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_proposal_created_at"), "proposal", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_proposal_issuer_id"), "proposal", ["issuer_id"], unique=False
    )
    op.create_index(op.f("ix_proposal_status"), "proposal", ["status"], unique=False)
    op.create_index(op.f("ix_proposal_uid"), "proposal", ["uid"], unique=True)
    op.create_table(
        "wallet",
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("business_id", sa.Uuid(), nullable=False),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_wallet_business_id"), "wallet", ["business_id"], unique=False
    )
    op.create_index(
        op.f("ix_wallet_created_at"), "wallet", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_wallet_currency"), "wallet", ["currency"], unique=False)
    op.create_index(op.f("ix_wallet_owner_id"), "wallet", ["owner_id"], unique=False)
    op.create_index(op.f("ix_wallet_uid"), "wallet", ["uid"], unique=True)
    op.create_table(
        "transaction",
        sa.Column("wallet_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("balance", sa.Numeric(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("business_id", sa.Uuid(), nullable=False),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallet.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_transaction_business_id"), "transaction", ["business_id"], unique=False
    )
    op.create_index(
        op.f("ix_transaction_created_at"), "transaction", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_transaction_owner_id"), "transaction", ["owner_id"], unique=False
    )
    op.create_index(op.f("ix_transaction_uid"), "transaction", ["uid"], unique=True)
    op.create_index(
        op.f("ix_transaction_wallet_id"), "transaction", ["wallet_id"], unique=False
    )
    op.create_table(
        "wallethold",
        sa.Column("wallet_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("expires_at", sa.DateTime(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallet.uid"],
        ),
        sa.PrimaryKeyConstraint("uid"),
    )
    op.create_index(
        op.f("ix_wallethold_created_at"), "wallethold", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_wallethold_expires_at"), "wallethold", ["expires_at"], unique=False
    )
    op.create_index(
        op.f("ix_wallethold_status"), "wallethold", ["status"], unique=False
    )
    op.create_index(op.f("ix_wallethold_uid"), "wallethold", ["uid"], unique=True)
    op.create_index(
        op.f("ix_wallethold_wallet_id"), "wallethold", ["wallet_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_wallethold_wallet_id"), table_name="wallethold")
    op.drop_index(op.f("ix_wallethold_uid"), table_name="wallethold")
    op.drop_index(op.f("ix_wallethold_status"), table_name="wallethold")
    op.drop_index(op.f("ix_wallethold_expires_at"), table_name="wallethold")
    op.drop_index(op.f("ix_wallethold_created_at"), table_name="wallethold")
    op.drop_table("wallethold")
    op.drop_index(op.f("ix_transaction_wallet_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_uid"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_owner_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_created_at"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_business_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_wallet_uid"), table_name="wallet")
    op.drop_index(op.f("ix_wallet_owner_id"), table_name="wallet")
    op.drop_index(op.f("ix_wallet_currency"), table_name="wallet")
    op.drop_index(op.f("ix_wallet_created_at"), table_name="wallet")
    op.drop_index(op.f("ix_wallet_business_id"), table_name="wallet")
    op.drop_table("wallet")
    op.drop_index(op.f("ix_proposal_uid"), table_name="proposal")
    op.drop_index(op.f("ix_proposal_status"), table_name="proposal")
    op.drop_index(op.f("ix_proposal_issuer_id"), table_name="proposal")
    op.drop_index(op.f("ix_proposal_created_at"), table_name="proposal")
    op.drop_table("proposal")
    op.drop_index(op.f("ix_permission_uid"), table_name="permission")
    op.drop_index(op.f("ix_permission_created_at"), table_name="permission")
    op.drop_index(op.f("ix_permission_business_id"), table_name="permission")
    op.drop_index(op.f("ix_permission_app_id"), table_name="permission")
    op.drop_table("permission")
    op.drop_index(op.f("ix_business_url"), table_name="business")
    op.drop_index(op.f("ix_business_uid"), table_name="business")
    op.drop_index(op.f("ix_business_name"), table_name="business")
    op.drop_index(op.f("ix_business_created_at"), table_name="business")
    op.drop_table("business")
    op.drop_index(op.f("ix_application_url"), table_name="application")
    op.drop_index(op.f("ix_application_uid"), table_name="application")
    op.drop_index(op.f("ix_application_name"), table_name="application")
    op.drop_index(op.f("ix_application_created_at"), table_name="application")
    op.drop_table("application")
    # ### end Alembic commands ###
